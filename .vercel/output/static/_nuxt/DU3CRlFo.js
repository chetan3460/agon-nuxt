const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WT0AI7xL.js","./xeZkEWeY.js","./BHiq_NHH.js","./BBOxQohv.js","./D5IeuQiB.js","./CCCfW3li.js","./Bt8UJi_g.js","./Z1Cyrq5u.js","./ModalVideo.DnGWXVPb.css","./oAX66du8.js","./tjWugQG1.js","./DHhA2bE6.js","./B2i1sR6l.js","./BMSQkwth.js","./DX9d9EvI.js","./diYvZ8XR.js","./B5xUpYtK.js","./CS9Oor4q.js","./D3J0VMmv.js","./DJamwe3C.js"])))=>i.map(i=>d[i]);
import{r as m,G as E,d as f,y as b,i,j as A,v as P,F as L,q as D,n as h,o as n,z as I,A as R,$ as t,a1 as o,B as V}from"./BHiq_NHH.js";const y={key:0},O={__name:"slugbackup",setup(B){const _=e=>({"page-blocks.hero-about-block":t(()=>o(()=>import("./WT0AI7xL.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url)),"page-blocks.content-image-block":t(()=>o(()=>import("./Bt8UJi_g.js"),__vite__mapDeps([6,7,2,8,3,4,5]),import.meta.url)),"page-blocks.cards-block":t(()=>o(()=>import("./oAX66du8.js"),__vite__mapDeps([9,2,3,4,5]),import.meta.url)),"page-blocks.process-block":t(()=>o(()=>import("./tjWugQG1.js"),__vite__mapDeps([10,3,2,4,5]),import.meta.url)),"page-blocks.faq-block":t(()=>o(()=>import("./DHhA2bE6.js"),__vite__mapDeps([11,12,2,3,13,4,5]),import.meta.url)),"page-blocks.service-page-banner-block":t(()=>o(()=>import("./DX9d9EvI.js"),__vite__mapDeps([14,1,2,3,13,4,5]),import.meta.url)),"page-blocks.partner-block":t(()=>o(()=>import("./diYvZ8XR.js"),__vite__mapDeps([15,3,2,4,5]),import.meta.url)),"page-blocks.card-block-layout-two":t(()=>o(()=>import("./B5xUpYtK.js"),__vite__mapDeps([16,17,2,3,4,5]),import.meta.url)),"page-blocks.two-col-image-content-block":t(()=>o(()=>import("./D3J0VMmv.js"),__vite__mapDeps([18,3,2,4,5]),import.meta.url)),"page-blocks.contact-us":t(()=>o(()=>import("./DJamwe3C.js"),__vite__mapDeps([19,2,3,4,5]),import.meta.url))})[e]||null,a=m(null),c=m("Loading or no data available..."),d=E(),v=f(()=>!a.value||!Array.isArray(a.value.Blocks)?[]:a.value.Blocks.filter(e=>e&&e.__component&&_(e.__component))),g=async e=>{try{const r=V().$strapiBaseUrl,l=await(await fetch(`${r}/api/sitemaps?populate=Blocks`)).json();if(l!=null&&l.data){const p=l.data.find(k=>{var u;return((u=k.PageURL)==null?void 0:u.trim().toLowerCase())===e.trim().toLowerCase()});if(!p){console.error(`Page with slug "${e}" not found.`),c.value=`Error: Page with slug "${e}" not found.`;return}a.value=p}else c.value="No data received from API."}catch(r){console.error("Error fetching data:",r),c.value="Failed to fetch data from the API."}};return b(()=>{const e=d.params.slug;e&&(a.value=null,g(e))}),(e,r)=>a.value?(n(),i("div",y,[A("h1",null,P(a.value.PageTitle),1),(n(!0),i(L,null,D(v.value,s=>(n(),i("div",{key:s.id},[(n(),I(R(_(s.__component)),{data:s},null,8,["data"]))]))),128))])):h("",!0)}};export{O as default};
